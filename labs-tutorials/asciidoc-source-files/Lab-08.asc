= Lab 8.0 â€“ Preferences

== Objective

Update the Yamba app to use the preference framework to store username and password.

== Overview

In this lab, we will cover the following concepts:

* Using Preferences to store username and password

* Creating a preferences XML

* Creating menu items

* Starting activities from the menu

* Reading the preferences resource and storing preferences in field variables

* Demonstrating how Android UI pre-populates the preferences activity from the XML

== Setup

Lab 7.0 has been completed.

== Steps

. Create a preferences XML
. Create a new activity subclassing PreferenceActivity
. Call preference activity from menu
. Read from the preferences resource
. Assign listener for changes in preference values

== Detailed Steps

[start=1]
 . Create a preference XML directory under +res+ and create a preference XML file

[source, xml]
.res/xml/prefs.xml
----
<?xml version="1.0" encoding="utf-8"?>
<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android">

        <EditTextPreference
            android:key="@string/prefsUsernameKey"
            android:title="@string/prefsUsernameTitle" />
        <EditTextPreference
            android:key="@string/prefsPasswordKey"
            android:password="true"
            android:title="@string/prefsPasswordTitle" />

</PreferenceScreen>
----

[source, xml]
.res/values/string.xml
----
<string name="prefsUsernameKey">username</string>
<string name="prefsUsernameTitle">User Name</string>
<string name="prefsPasswordKey">password</string>
<string name="prefsPasswordTitle">Password</string>
----

[start=2]
 . Create a preference activity called +SettingsActivity+

[source, java]
----
public class SettingsActivity extends PreferenceActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        // Load the preferences from an XML resource
        addPreferencesFromResource(R.xml.prefs);
    }
}
----

[start=3]
 . Add +SettingsActivity+ to Android Manifest

[source, xml]
----
<activity
    android:name=".SettingsActivity"
    android:label="Settings" >
</activity>
----

[start=4]
 . Create menu.xml

[source, xml]
.res/menu/menu.xml
----
<menu xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    tools:context=".MyActivity" >

    <item android:id="@+id/action_settings"
        android:title="@string/action_settings"
        android:orderInCategory="100"
        android:showAsAction="never" />

</menu>
----

[source, xml]
.res/values/string.xml
----
<string name="action_settings">Settings</string>
----

[start=5]
 . Update +StatusActivity+ to build menu

[source, java]
----
@Override
public boolean onCreateOptionsMenu(Menu menu) {
    // Inflate the menu; this adds items to the action bar if it is present.
    super.onCreateOptionsMenu(menu);
    getMenuInflater().inflate(R.menu.menu, menu);
    return true;
}

@Override
public boolean onOptionsItemSelected(MenuItem item) {

    int id = item.getItemId();

    if (id == R.id.action_settings) {
        return true;
    }

    return super.onOptionsItemSelected(item);
}
----

NOTE: Depending on how you created the initial version of +StatusActivity+
the menu methods may have already been generated for you.

[start=6]
 . Call +SettingActivity+ when "Settings" menu item is selected

[source, java]
----
if (id == R.id.action_settings) {

    Intent activityIntent = new Intent(this, SettingsActivity.class);
    startActivity(activityIntent);

    return true;
}
----

[start=7]
 . Read preference values from preferences framework

[source, java]
----
SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(StatusActivity.this);

String USERNAME_KEY = getResources().getString(R.string.prefsUsernameKey);
String PASSWORD_KEY = getResources().getString(R.string.prefsPasswordKey);

username = sharedPreferences.getString(USERNAME_KEY, "student");
password = sharedPreferences.getString(PASSWORD_KEY, "password");
----

[start=8]
 . Implement preference change listener in +StatusActivity+

[source, java]
.com.thenewcircle.yamba.StatusActivity.java
----
public class StatusActivity
    extends Activity
    implements SharedPreferences.OnSharedPreferenceChangeListener {
----

[source, java]
.com.thenewcircle.yamba.StatusActivity.java
----
@Override
public void onSharedPreferenceChanged(SharedPreferences sharedPreferences, String key) {

    Log.d(TAG,"onSharedPreferenceChanged");

    String USERNAME_KEY = getResources().getString(R.string.prefsUsernameKey);
    String PASSWORD_KEY = getResources().getString(R.string.prefsPasswordKey);

    username = sharedPreferences.getString(USERNAME_KEY, "student");
    password = sharedPreferences.getString(PASSWORD_KEY, "password");
}
----

NOTE: You may want to refactor the code to remove the duplicate lookup of the keys
for username and password

[start=9]
 . Register preferences change listener in +StatusActivity+

[source, java]
----
@Override
protected void onResume() {
    super.onResume();
    PreferenceManager.getDefaultSharedPreferences(this)
            .registerOnSharedPreferenceChangeListener(this);
}
----

.Think About This
CAUTION: Would it be better to register the listener in the +onCreate+ method?
What is the impact of registering the listener twice?

[start=10]
 . Unregister preferences change listener in +StatusActivity+ when the activity is destroyed.

[source, java]
----
@Override
protected void onDestroy() {
    super.onDestroy();
    PreferenceManager.getDefaultSharedPreferences(this)
            .unregisterOnSharedPreferenceChangeListener(this);
}
----

[start=11]
 . Register for Yamba account

Login to http://yamba.marakana.com as "student/password"

Invite yourself and register for an account.

Update the preferences with your new username and password.
