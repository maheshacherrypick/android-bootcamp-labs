= Lab 5.0 â€“ Asynchronous Tasks

== Objective
By the time this lab is complete, our Yamba app will be able to post status messages asynchronously.

== Overview
In this lab, we will cover the following concepts:

* Creating an Asynchronous task for posting the status update

* +AsyncTask+

* Moving our network activity from UI thread to a background thread

* Demonstrating +doInBackground+ of our asynchronous task

== Setup
Lab 4.0 has been completed.

== Steps
. Create an asynchronous task for posting the status update.
. Move the network activity from a UI thread to a background thread.
. Implement (and demonstrate) +doInBackground+ of your asynchronous task.

== Detailed Steps

 1. Create an asynchronous task for posting the status update.
Should this class be a separate class or a member of +StatusActivity+?

Add the following code to +StatusActivity+

[source, java]
----
private class PostStatusTask extends AsyncTask<String, Void, String> {

    @Override
    protected String doInBackground(String... status) {

        YambaClient yambaClient = new YambaClient("student", "password");

        try {
            yambaClient.postStatus(status[0]);
            return "success";
        } catch (YambaClientException e) {
            e.printStackTrace();
            return "failure";
        }

    }
}
----
[start=2]
 . Instantiate the AsyncTask when the Post button is pressed.

[source, java]
----
    new PostTweetTask().execute(status);
----

[start=3]
 . Add internet permission to the Android manifest.

[source, xml]
----
    <uses-permission android:name="android.permission.INTERNET" />
----


[start=4]
 . Turn off Strict mode by removing the following code:

[source, java]
----
StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();
StrictMode.setThreadPolicy(policy);
----

[start=5]
 . Start a progress dialog before posting status.  Add the following code to the AsyncTask:

[source, java]
----
ProgressDialog dialog;

@Override
protected void onPreExecute() {
    dialog = new ProgressDialog(StatusActivity.this);
    dialog.setMessage("Posting status...");
    dialog.show();
}
----

[start=6]
 . Dismiss progress dialog after status has been posted.  Add the following code to the AsyncTask:

[source, java]
----
@Override
protected void onPostExecute(String result) {
    dialog.dismiss();
    Toast.makeText(getApplicationContext(), result, Toast.LENGTH_SHORT).show();
}
----
