= Lab 10.0 â€“ Activities

== Objective
Update the Yamba app will be able to display timeline updates on a separate activity.

== Overview
In this lab, we will cover the following concepts:

* Creating a basic activity

* Reading the timeline from Yamba client library

* Logging the timeline

== Setup
Lab 9.0 has been completed.

== Steps
. Create a new activity.
. Implement functionality to read the timeline from Yamba client library.
. Implement functionality to log the timeline.
. Add a temporary button (and associated button handler) to dump out the updates.

== Detailed Steps
[start=1]
. Create new activity called +TimelineActivity+
Using the wizard will generate java file, layout and update the Android manifest.

[start=2]
. Make +TimelineActivity+ the default activity when app launches
Move the intent in the Android manifest.

[start=3]
. Add ListView to layout and create a layout for the item detail

[source, xml]
.res/layout/activity_timeline.xml
----
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:paddingBottom="0dp"
    android:paddingLeft="@dimen/activity_horizontal_margin"
    android:paddingRight="@dimen/activity_horizontal_margin"
    android:paddingTop="0dp" >

    <ListView
        android:id="@+id/timeline"
        android:layout_width="match_parent"
        android:layout_height="match_parent" />

</RelativeLayout>
----

[source, xml]
.res/layout/activity_timeline_item.xml
----
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:paddingBottom="@dimen/activity_vertical_margin"
    android:paddingLeft="@dimen/activity_horizontal_margin"
    android:paddingRight="@dimen/activity_horizontal_margin"
    android:paddingTop="@dimen/activity_vertical_margin" >

    <TextView
        android:id="@+id/status_user"
        style="@style/font_general"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentLeft="true"
        android:layout_alignParentTop="true" />

    <TextView
        android:id="@+id/status_message"
        style="@style/font_general"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_below="@+id/status_user" />

</RelativeLayout>
----

[start=4]
. Create custom adapter for ListView

[source, java]
.TimelineActivity.java
----
private class YambaStatusArrayAdapter extends ArrayAdapter<YambaStatus> {

    public YambaStatusArrayAdapter(Context context, int textViewResourceId, List<YambaStatus> objects) {
        super(context, textViewResourceId, objects);
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {

        YambaStatus status = getItem(position);

        if (convertView == null) {
            convertView = getLayoutInflater().inflate(R.layout.activity_timeline_item, null);
        }

        TextView statusUser = (TextView) convertView.findViewById(R.id.status_user);
        TextView statusMessage = (TextView) convertView.findViewById(R.id.status_message);

        statusUser.setText(status.getUser());
        statusMessage.setText(status.getMessage());

        return convertView;
    }
}
----

[start=5]
. Create AsyncTask to acquire status items in timeline

[source, java]
.TimelineActivity.java
----
private class GetTimelineTask extends AsyncTask<Void, Void, List<YambaStatus>> {

    private ProgressDialog dialog;

    @Override
    protected List<YambaStatus> doInBackground(Void... params) {

        YambaClient yambaClient = new YambaClient(username, password);

        List<YambaStatus> timeline = null;

        try {
            timeline = yambaClient.getTimeline(100);
            return timeline;
        } catch (YambaClientException e) {
            e.printStackTrace();
            return timeline;
        }
    }

    @Override
    protected void onPostExecute(List<YambaStatus> timeline) {
        for (YambaStatus status : timeline) {
            Log.d("TimelineActivity", "YambaStatus: " + status.getMessage());
        }
        dialog.dismiss();
        String result = "Number of items: " + timeline.size();

        YambaStatusArrayAdapter adapter =
                new YambaStatusArrayAdapter(TimelineActivity.this, 0, timeline);

        ListView listView = (ListView) findViewById(R.id.timeline);
        listView.setAdapter(adapter);

    }

    @Override
    protected void onPreExecute() {
        dialog = new ProgressDialog(TimelineActivity.this);
        dialog.setMessage("Getting timeline...");
        dialog.show();
    }
}
----

[start=6]
. Build ListView object.

[source, java]
.TimelineActivity.java
----
YambaStatusArrayAdapter adapter =
        new YambaStatusArrayAdapter(TimelineActivity.this, 0, timeline);

ListView listView = (ListView) findViewById(R.id.timeline);
listView.setAdapter(adapter);
----

NOTE: Where should this code go?  Could it be in the +onPostExecute+ method?
